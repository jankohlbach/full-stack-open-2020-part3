{"version":3,"sources":["components/Notification.js","components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","index.js"],"names":["Notification","notification","message","className","type","Filter","filter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","handleSubmit","newName","handleNameChange","newNumber","handleNumberChange","Person","person","name","number","data-id","id","onClick","handleDelete","Persons","persons","map","toLowerCase","indexOf","key","axios","get","then","response","data","post","delete","put","App","useState","setPersons","setNotification","setFilter","setNewName","setNewNumber","useEffect","personService","catch","error","setTimeout","console","e","target","preventDefault","some","window","confirm","find","newPerson","concat","personToDelete","parseInt","dataset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.766badfe.chunk.js","sourcesContent":["import React from 'react';\n\nconst Notification = ({notification}) => {\n  if(!notification?.message) {\n    return null;\n  }\n\n  return (\n    <div className={notification.type}>{notification.message}</div>\n  )\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst Filter = ({filter, handleFilterChange}) => (\n  <div>\n    filter shown with <input value={filter} onChange={handleFilterChange} />\n  </div>\n);\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.handleSubmit}>\n    <div>\n      name: <input value={props.newName} onChange={props.handleNameChange} />\n    </div>\n    <div>\n      number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Person = (props) => (\n  <div>{props.person.name} {props.person.number}<button data-id={props.person.id} onClick={props.handleDelete}>delete</button></div>\n);\n\nexport default Person;\n","import React from 'react';\n\nimport Person from './Person';\n\nconst Persons = (props) => (\n  props.persons.map((person) => {\n    if(person.name.toLowerCase().indexOf(props.filter.toLowerCase()) !== -1)\n      return <Person key={person.name} person={person} handleDelete={props.handleDelete} />\n  })\n);\n\nexport default Persons;\n","import axios from 'axios';\n\nconst BASE_URL = '/api';\n\nconst getAll = () => {\n  const request = axios.get(`${BASE_URL}/persons`);\n  return request.then((response) => (response.data));\n};\n\nconst create = (person) => {\n  const request = axios.post(`${BASE_URL}/persons`, person);\n  return request.then((response) => (response.data));\n};\n\nconst remove = (person) => {\n  const request = axios.delete(`${BASE_URL}/person/${person}`);\n  return request.then((response) => (response.data));\n};\n\nconst update = (person) => {\n  const request = axios.put(`${BASE_URL}/persons/${person.id}`, person);\n  return request.then((response) => (response.data));\n}\n\nexport default {getAll, create, remove, update};\n","import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport Notification from './components/Notification';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\n\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [notification, setNotification] = useState({});\n  const [filter, setFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  useEffect(function getPersons() {\n    personService\n      .getAll()\n      .then((response) => setPersons(response))\n      .catch((error) => {\n        setNotification({\n          message: 'Error while fetching phonebook',\n          type: 'error',\n        });\n        setTimeout(() => {\n          setNotification(null);\n        }, 5000);\n        console.error(error);\n      });\n  }, []);\n\n  const handleFilterChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if(persons.some((person) => person.name === newName)) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const person = persons.find((person) => person.name === newName);\n\n        const newPerson = {\n          ...person,\n          number: newNumber,\n        };\n\n        personService\n          .update(newPerson)\n          .then((response) => {\n            setPersons(persons.map((person) => person.id !== response.id ? person : response));\n            setNewName('');\n            setNewNumber('');\n\n            setNotification({\n              message: `Updated ${person.name}`,\n              type: 'success',\n            });\n            setTimeout(() => {\n              setNotification({});\n            }, 3000);\n          })\n          .catch((error) => {\n            setNotification({\n              message: 'Error while updating number',\n              type: 'error',\n            });\n            setTimeout(() => {\n              setNotification(null);\n            }, 5000);\n            console.error(error);\n          });\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      };\n\n      personService\n        .create(newPerson)\n        .then((response) => {\n          setPersons(persons.concat(response));\n          setNewName('');\n          setNewNumber('');\n\n          setNotification({\n            message: `Added ${response.name}`,\n            type: 'success',\n          });\n          setTimeout(() => {\n            setNotification(null);\n          }, 3000);\n        })\n        .catch((error) => {\n          setNotification({\n            message: 'Error while creating person',\n            type: 'error',\n          });\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n          console.error(error);\n        });\n    }\n  };\n\n  const handleDelete = (e) => {\n    const personToDelete = persons.find((person) => person.id === parseInt(e.target.dataset.id, 10));\n\n    if(window.confirm(`Delete ${personToDelete.name} ?`)) {\n      personService\n        .remove(personToDelete.id)\n        .then((response) => {\n          setPersons(persons.filter((person) => person.id !== personToDelete.id));\n        })\n        .catch((error) => {\n          setNotification({\n            message: 'Error while deleting person',\n            type: 'error',\n          });\n          setTimeout(() => {\n            setNotification(null);\n          }, 5000);\n          console.error(error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notification={notification} />\n      <Filter value={filter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm handleSubmit={handleSubmit} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}